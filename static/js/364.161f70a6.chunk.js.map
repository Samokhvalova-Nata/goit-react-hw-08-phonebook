{"version":3,"file":"static/js/364.161f70a6.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/Modal/Modal.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","pages/Contacts.jsx","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Edit.js"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n    [selectFilter, selectContacts],\n    (filter, contacts) => {\n        const normalizeFilter = filter.toLowerCase();\n        return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizeFilter)).sort((a, b) => a.name.localeCompare(b.name));\n    })\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { selectContacts, selectIsLoading } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { toast } from 'react-hot-toast';\nimport { Box, Button, Container, TextField } from '@mui/material';\nimport { AddLoader } from \"components/Loader\";\n\nexport const ContactForm = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n    const operation = useSelector(selectIsLoading);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const form = e.currentTarget;\n        const name = form.elements.name.value;\n        const number = form.elements.number.value;\n\n        const newName = contacts.some(contact =>\n                contact.name.toLowerCase() === name.toLowerCase());\n                if (newName) {\n                    toast.error(`${name} is already in contacts`);\n                    return;\n        }\n        if (name === '' || number === '') {\n            toast.error('Fields cannot be empty. Enter some data!');\n            return;\n        }\n        try {\n            await dispatch(addContact({ name: name, number: number })).unwrap();\n            toast.success(`${name} is added to contacts`);\n            form.reset();    \n        } catch (error) {\n            console.log(error)\n        }\n};\n\n    return (\n            <Container maxWidth=\"xs\" sx={{ p: 4, mb: 4,\n                bgcolor: '#ffffff',\n                borderRadius: '10px',\n                boxShadow: 3,\n                }}>\n                <Box component=\"form\"\n                    autoComplete=\"off\"\n                    noValidate\n                    onSubmit={handleSubmit}>\n\n                    <TextField\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"Name\"\n                    name=\"name\"\n                    size=\"small\"\n                    />\n\n                    <TextField\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        type=\"tel\"\n                        id=\"number\"\n                        label=\"Phone Number\"\n                    name=\"number\"\n                    size=\"small\"\n                        />\n\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{ mt: 2, mb: 2 }}\n                        size=\"medium\">\n                    {operation === 'add' ? <AddLoader/> : <>Add contact</>}\n                    </Button>\n                </Box>\n            </Container>\n    );\n};","import { useDispatch, useSelector } from 'react-redux';\nimport { updateFilter } from 'redux/filter/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { Container, TextField, Typography } from '@mui/material';\n\nexport const Filter = () => {\n    const filter = useSelector(selectFilter);\n    const dispatch = useDispatch();\n\n    const handleChangeFilter = (e) => {\n        dispatch(updateFilter(e.currentTarget.value))\n    };\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Typography sx={{ mb: 1 }}\n                fontSize='22px'\n                color='#212121'\n                paragraph\n            >\n                Find contacts by name:\n            </Typography>\n            <TextField\n                sx={{ my: 0.5 }}\n                margin=\"normal\"\n                fullWidth\n                name=\"filter\"\n                value={filter}\n                size=\"small\"\n                onChange={handleChangeFilter}/>\n        </Container>\n    );\n};\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Modal from '@mui/material/Modal';\nimport PropTypes from 'prop-types';\nimport { AddLoader } from \"components/Loader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateContact } from \"redux/contacts/operations\";\nimport { toast } from 'react-hot-toast';\nimport { Grid, TextField } from '@mui/material';\nimport { selectContacts, selectIsLoading } from 'redux/contacts/selectors';\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    boxShadow: 24,\n    p: 4,\n};\n\nexport const EditModal = ({ isOpen, id, name, number, onClose }) => {\n    const [contactName, setContactName] = React.useState(name);\n    const [contactNumber, setContactNumber] = React.useState(number);\n    const dispatch = useDispatch();\n    const operation = useSelector(selectIsLoading);\n    const contacts = useSelector(selectContacts);\n\n    const handleEdit = async (e) => {\n        e.preventDefault();\n\n        const EditName = contacts.some(contact =>\n            contact.name.toLowerCase() === contactName.toLowerCase());\n\n        if (EditName) {\n            toast.error(`${contactName} is already in contacts`);\n            return;\n        }\n\n        if (contactName === '' || contactNumber === '') {\n            toast.error('Fields cannot be empty. Enter some data!');\n            return;\n        }\n\n        try {\n            await dispatch(updateContact({ name: contactName, number: contactNumber, contactId:id })).unwrap();\n            toast.success(`${name} contact was changed`);\n            onClose();\n        } catch (error) {\n            console.log(error);\n            toast.error('Oooops!..Something went wrong:( Please try later');\n        }\n    };\n\n    return (\n        <div>\n            <Modal\n                open={isOpen}\n                onClose={onClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Box component=\"form\"\n                    autoComplete=\"off\"\n                    noValidate\n                    onSubmit={handleEdit}>\n\n                    <TextField\n                        variant=\"filled\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"Name\"\n                        name=\"name\"\n                        value={contactName}\n                        onChange={({ target: { value } }) => setContactName(value)}/>\n\n                    <TextField\n                        variant=\"filled\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        type=\"tel\"\n                        id=\"number\"\n                        label=\"Phone Number\"\n                        name=\"number\"\n                        value={contactNumber}\n                        onChange={({ target: { value } }) => setContactNumber(value)}/>\n\n                    <Grid container justifyContent=\"center\" >\n                        <Button\n                            type=\"submit\"\n                            variant=\"contained\"\n                            sx={{ mt: 2, mb: 2, mr: 2 }}>\n                            {operation === 'update' ? <AddLoader/> : <>Save</>}\n                        </Button>\n                        <Button\n                            type=\"button\"\n                            size=\"medium\"\n                            variant=\"outlined\"\n                            sx={{ mt: 2, mb: 2 }}\n                            onClick={onClose}>\n                            Cancel\n                        </Button>\n                    </Grid>\n                        \n                </Box>\n                </Box>\n            </Modal>\n        </div>\n    );\n};\n\nEditModal.propTypes = {\n    isOpen: PropTypes.bool.isRequired,\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { toast } from 'react-hot-toast';\nimport Button from '@mui/material/Button';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { useState } from 'react';\nimport { EditModal } from 'components/Modal/Modal';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { RemoveLoader } from 'components/Loader';\n\n\nexport const ContactItem = ({ id, name, number }) => {\n    const dispatch = useDispatch();\n    const [isShowModal, setIsShowModal] = useState(false);\n    const operation = useSelector(selectIsLoading);\n\n    const handleDelete = async () => {\n        try {\n            await dispatch(deleteContact(id)).unwrap();\n            toast.success(`${name} was deleted from contacts`)\n        } catch (error) {\n            console.log(error)\n        } \n    };\n\n    const toggleModal = () => setIsShowModal(prev => !prev);\n\n    return (\n        <>\n            <Grid container spacing={1} columns={12}>\n                <Grid item sm={4} >\n                    <Typography\n                        paragraph\n                        fontSize='18px'\n                        fontWeight='500'\n                        color='#212121'\n                        textAlign='left'>\n                        {name}\n                    </Typography>\n                </Grid>\n                <Grid item xs={4} >\n                    <Typography\n                        fontSize='18px'\n                        color='#757575'\n                        paragraph\n                        textAlign='left'>\n                        {number}\n                    </Typography>\n                </Grid>\n                <Grid item sm={2}>\n                    <Button\n                        type=\"button\"\n                        variant=\"outlined\"\n                        aria-label=\"delete\"\n                        size=\"small\"\n                        color=\"primary\"\n                        startIcon={operation === id ? <RemoveLoader /> : <DeleteIcon/>}\n                        onClick={handleDelete}>\n                        {operation === id ? 'Deleting...' : 'Delete'}\n                    </Button>\n                </Grid>\n                <Grid item sm={2}>\n                    <Button\n                        type=\"button\"\n                        variant=\"contained\"\n                        aria-label=\"edit\"\n                        size=\"small\"\n                        color=\"primary\"\n                        startIcon={<EditIcon />}\n                        onClick={toggleModal}>\n                        Edit\n                    </Button>\n                </Grid>\n            </Grid>\n            {isShowModal &&\n                <EditModal\n                onClose={toggleModal}\n                id={id}\n                name={name}\n                number={number}\n                isOpen={isShowModal} />\n            }\n        </>\n    );\n};\n\nContactItem.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n};\n","import { useSelector } from 'react-redux';\nimport { ContactItem } from '../ContactItem/ContactItem';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { Box, Container } from '@mui/material';\n\nexport const ContactList = () => {\n    const visibleContacts = useSelector(selectVisibleContacts);\n\n    return (\n        <Container sx={{ mt: 4 }} maxWidth=\"md\">\n            <Box sx={{ p: 4,\n                bgcolor: '#ffffff',\n                borderRadius: '10px',\n                boxShadow: 3,}} component='ul'>\n                {visibleContacts.map(({ id, name, number }) => (\n                <ContactItem\n                    key={id}\n                    id={id}\n                    name={name}\n                    number={number}\n                />\n            ))}\n            </Box>\n        </Container>\n    );\n};","import { useDispatch, useSelector } from 'react-redux';\nimport { selectError, selectIsLoading, selectVisibleContacts } from 'redux/contacts/selectors';\nimport { MainLoader } from 'components/Loader';\nimport { ContactForm } from 'components/ContactForm';\nimport { Filter } from 'components/Filter';\nimport { ContactList } from 'components/ContactList';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Container, Typography } from '@mui/material';\nimport { Helmet } from 'react-helmet';\n\n\nconst Contacts = () => {\n  const error = useSelector(selectError);\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n  const operation = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n      <Container component='main'\n            maxWidth=\"md\"\n            sx={{\n                marginTop: 3,\n                marginBottom: 3,\n                minHeight: '100vh',\n                textAlign: 'center',\n            }}>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n          <Typography\n            sx={{ mb: 3 }}\n            variant=\"h1\"\n            fontSize='44px'\n            fontWeight='700'\n            gutterBottom>\n            Phonebook\n        </Typography>\n\n          <ContactForm />\n\n          <Typography\n            sx={{ mb: 3 }}\n            variant=\"h2\"\n            fontSize='34px'\n            fontWeight='500'\n            gutterBottom>\n            Contacts\n        </Typography>\n\n        <Filter />\n\n        {operation === 'fetch' && !error && <MainLoader />}\n        {visibleContacts.length === 0\n          ? (<Typography sx={{ my: 2 }}\n                fontSize='18px'\n                color='#212121'\n                fontWeight='700'\n                paragraph\n                align=\"center\">There are no contacts yet</Typography>)\n          : (<ContactList />)}\n\n    </Container>\n  );\n};\n\nexport default Contacts;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\nexports.default = _default;"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","normalizeFilter","toLowerCase","contact","name","includes","sort","a","b","localeCompare","ContactForm","dispatch","useDispatch","useSelector","operation","handleSubmit","e","preventDefault","form","currentTarget","elements","value","number","some","toast","addContact","unwrap","reset","console","log","Container","maxWidth","sx","p","mb","bgcolor","borderRadius","boxShadow","Box","component","autoComplete","noValidate","onSubmit","TextField","margin","required","fullWidth","id","label","size","type","Button","variant","mt","Filter","Typography","fontSize","color","paragraph","my","onChange","updateFilter","style","position","top","left","transform","width","EditModal","isOpen","onClose","React","contactName","setContactName","contactNumber","setContactNumber","handleEdit","updateContact","contactId","Modal","open","target","Grid","container","justifyContent","mr","onClick","ContactItem","useState","isShowModal","setIsShowModal","handleDelete","deleteContact","toggleModal","prev","spacing","columns","item","sm","fontWeight","textAlign","xs","startIcon","Delete","Edit","ContactList","visibleContacts","map","useEffect","fetchContacts","marginTop","marginBottom","minHeight","Helmet","gutterBottom","length","align","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}