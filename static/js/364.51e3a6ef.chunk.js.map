{"version":3,"file":"static/js/364.51e3a6ef.chunk.js","mappings":"4MAEaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EACtBC,EAAe,SAAAH,GAAK,OAAIA,EAAMI,OAAOA,MAAjB,EACpBC,EAAkB,SAAAL,GAAK,OAAIA,EAAMC,SAASK,SAAnB,EACvBC,EAAc,SAAAP,GAAK,OAAIA,EAAMC,SAASO,KAAnB,EAEnBC,GAAwBC,EAAAA,EAAAA,IACjC,CAACP,EAAcJ,IACf,SAACK,EAAQH,GACL,IAAMU,EAAkBP,EAAOQ,cAC/B,OAAOX,EAASG,QAAO,SAAAS,GAAO,OAC9BA,EAAQC,KAAKF,cAAcG,SAASJ,EADN,IACwBK,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEH,KAAKK,cAAcD,EAAEJ,KAAjC,GAC9D,I,2GCNQM,EAAc,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACXrB,GAAWsB,EAAAA,EAAAA,IAAYxB,GACvByB,GAAYD,EAAAA,EAAAA,IAAYlB,GAExBoB,EAAY,mCAAG,WAAOC,GAAP,8EACjBA,EAAEC,iBAEIC,EAAOF,EAAEG,cACTf,EAAOc,EAAKE,SAAShB,KAAKiB,MAC1BC,EAASJ,EAAKE,SAASE,OAAOD,OAEpB9B,EAASgC,MAAK,SAAApB,GAAO,OAC7BA,EAAQC,KAAKF,gBAAkBE,EAAKF,aADP,IAPpB,uBAULsB,EAAAA,GAAAA,MAAA,UAAepB,EAAf,4BAVK,6BAaJ,KAATA,GAA0B,KAAXkB,EAbF,wBAcbE,EAAAA,GAAAA,MAAY,4CAdC,sDAkBPb,GAASc,EAAAA,EAAAA,IAAW,CAAErB,KAAMA,EAAMkB,OAAQA,KAAWI,SAlB9C,QAmBbF,EAAAA,GAAAA,QAAA,UAAiBpB,EAAjB,0BACAc,EAAKS,QApBQ,mDAsBbC,QAAQC,IAAR,MAtBa,2DAAH,sDA0BlB,OACQ,SAACC,EAAA,EAAD,CAAWC,SAAS,KAAKC,GAAI,CAAEC,EAAG,EAAGC,GAAI,EACrCC,QAAS,UACTC,aAAc,OACdC,UAAW,GAHf,UAKI,UAACC,EAAA,EAAD,CAAKC,UAAU,OACXC,aAAa,MACbC,YAAU,EACVC,SAAU3B,EAHd,WAKI,SAAC4B,EAAA,EAAD,CACIC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,GAAG,OACHC,MAAM,OACN5C,KAAK,UAET,SAACuC,EAAA,EAAD,CACIC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTG,KAAK,MACLF,GAAG,SACHC,MAAM,eACN5C,KAAK,YAET,SAAC8C,EAAA,EAAD,CACID,KAAK,SACLH,WAAS,EACTK,QAAQ,YACRnB,GAAI,CAAEoB,GAAI,EAAGlB,GAAI,GACjBmB,KAAK,QALT,SAMe,QAAdvC,GAAsB,SAAC,KAAD,KAAe,8BAAE,sBAK3D,E,mBCxEYwC,EAAS,WAClB,IAAM5D,GAASmB,EAAAA,EAAAA,IAAYpB,GACrBkB,GAAWC,EAAAA,EAAAA,MAMjB,OACI,UAACkB,EAAA,EAAD,CAAWC,SAAS,KAApB,WACI,SAACwB,EAAA,EAAD,CAAYvB,GAAI,CAAEE,GAAI,GAClBsB,SAAS,OACTC,MAAM,UACNC,WAAW,MACXC,WAAS,EACTC,MAAM,SALV,SAKmB,2BAGnB,SAACjB,EAAA,EAAD,CACIX,GAAI,CAAEE,GAAI,GACVU,OAAO,SACPE,WAAS,EACT1C,KAAK,SACLiB,MAAO3B,EACPmE,SApBe,SAAC7C,GACxBL,GAASmD,EAAAA,EAAAA,GAAa9C,EAAEG,cAAcE,OACzC,MAqBJ,E,gFCpBK0C,EAAQ,CACVC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,MAAO,IACPjC,QAAS,mBACTE,UAAW,GACXJ,EAAG,GAGMoC,EAAY,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,OAAQvB,EAAgC,EAAhCA,GAAI3C,EAA4B,EAA5BA,KAAMkB,EAAsB,EAAtBA,OAAQiD,EAAc,EAAdA,QAClD,EAAsCC,EAAAA,SAAepE,GAArD,eAAOqE,EAAP,KAAoBC,EAApB,KACA,EAA0CF,EAAAA,SAAelD,GAAzD,eAAOqD,EAAP,KAAsBC,EAAtB,KACMjE,GAAWC,EAAAA,EAAAA,MACXE,GAAYD,EAAAA,EAAAA,IAAYlB,GAExBkF,EAAU,mCAAG,WAAO7D,GAAP,oEACfA,EAAEC,iBACkB,KAAhBwD,GAAwC,KAAlBE,EAFX,uBAGXnD,EAAAA,GAAAA,MAAY,4CAHD,mDAOLb,GAASmE,EAAAA,EAAAA,IAAc,CAAE1E,KAAMqE,EAAanD,OAAQqD,EAAeI,UAAUhC,KAAOrB,SAP/E,OAQXF,EAAAA,GAAAA,QAAA,UAAiBpB,EAAjB,yBACAmE,IATW,kDAWX3C,QAAQC,IAAR,MACAL,EAAAA,GAAAA,MAAY,oDAZD,0DAAH,sDAgBhB,OACI,0BACI,SAACwD,EAAA,EAAD,CACIC,KAAMX,EACNC,QAASA,EACT,kBAAgB,oBAChB,mBAAiB,0BAJrB,UAMI,SAACjC,EAAA,EAAD,CAAKN,GAAI+B,EAAT,UACI,UAACzB,EAAA,EAAD,CAAKC,UAAU,OACfC,aAAa,MACbC,YAAU,EACVC,SAAUmC,EAHV,WAKA,SAAClC,EAAA,EAAD,CACIQ,QAAQ,SACRP,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,GAAG,OACHC,MAAM,OACN5C,KAAK,OACLiB,MAAOoD,EACPZ,SAAU,gBAAaxC,EAAb,EAAG6D,OAAU7D,MAAb,OAA2BqD,EAAerD,EAA1C,KAEd,SAACsB,EAAA,EAAD,CACIQ,QAAQ,SACRP,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTG,KAAK,MACLF,GAAG,SACHC,MAAM,eACN5C,KAAK,SACLiB,MAAOsD,EACPd,SAAU,gBAAaxC,EAAb,EAAG6D,OAAU7D,MAAb,OAA2BuD,EAAiBvD,EAA5C,KAEd,UAAC8D,EAAA,GAAD,CAAMC,WAAS,EAACC,eAAe,SAA/B,WACI,SAACnC,EAAA,EAAD,CACID,KAAK,SACLE,QAAQ,YACRnB,GAAI,CAAEoB,GAAI,EAAGlB,GAAI,EAAGoD,GAAI,GAH5B,SAImB,WAAdxE,GAAyB,SAAC,KAAD,KAAe,8BAAE,YAE/C,SAACoC,EAAA,EAAD,CACID,KAAK,SACLI,KAAK,SACLF,QAAQ,WACRnB,GAAI,CAAEoB,GAAI,EAAGlB,GAAI,GACjBqD,QAAShB,EALb,SAKsB,sBAU7C,ECzFKiB,GAAQC,EAAAA,EAAAA,GAAY,CACtBC,QAAS,CACTC,QAAS,CACLC,KAAM,cAKDC,EAAc,SAAC,GAA0B,IAAxB9C,EAAuB,EAAvBA,GAAI3C,EAAmB,EAAnBA,KAAMkB,EAAa,EAAbA,OAC9BX,GAAWC,EAAAA,EAAAA,MACjB,GAAsCkF,EAAAA,EAAAA,WAAS,GAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACMlF,GAAYD,EAAAA,EAAAA,IAAYlB,GAExBsG,EAAY,mCAAG,uGAEPtF,GAASuF,EAAAA,EAAAA,IAAcnD,IAAKrB,SAFrB,OAGbF,EAAAA,GAAAA,QAAA,UAAiBpB,EAAjB,+BAHa,+CAKbwB,QAAQC,IAAR,MALa,wDAAH,qDASZsE,EAAc,kBAAMH,GAAe,SAAAI,GAAI,OAAKA,CAAL,GAAzB,EAEpB,OACI,UAACC,EAAA,EAAD,CAAeb,MAAOA,EAAtB,WACI,UAACL,EAAA,GAAD,CAAMC,WAAS,EAACkB,QAAS,EAAGC,QAAS,GAArC,WACI,SAACpB,EAAA,GAAD,CAAMqB,MAAI,EAACC,GAAI,EAAf,UACI,SAAClD,EAAA,EAAD,CACII,WAAS,EACTH,SAAS,OACTE,WAAW,MACXD,MAAM,UAJV,SAKKrD,OAGT,SAAC+E,EAAA,GAAD,CAAMqB,MAAI,EAACE,GAAI,EAAf,UACI,SAACnD,EAAA,EAAD,CACIC,SAAS,OACTC,MAAM,UACNE,WAAS,EAHb,SAIKrC,OAGT,SAAC6D,EAAA,GAAD,CAAMqB,MAAI,EAACE,IAAE,EAAb,UACI,SAACxD,EAAA,EAAD,CACID,KAAK,SACLE,QAAQ,WACR,aAAW,SACXE,KAAK,QACLI,MAAM,UACNkD,UAAW7F,IAAciC,GAAK,SAAC,KAAD,KAAmB,SAAC6D,EAAA,EAAD,IACjDrB,QAASU,EAPb,SAQKnF,IAAciC,EAAK,cAAgB,cAG5C,SAACoC,EAAA,GAAD,CAAMqB,MAAI,EAACE,IAAE,EAAb,UACI,SAACxD,EAAA,EAAD,CACID,KAAK,SACLE,QAAQ,YACR,aAAW,OACXE,KAAK,QACLI,MAAM,UACNkD,WAAW,SAACE,EAAA,EAAD,IACXtB,QAASY,EAPb,SAO0B,cAKjCJ,IACG,SAAC1B,EAAD,CACAE,QAAS4B,EACTpD,GAAIA,EACJ3C,KAAMA,EACNkB,OAAQA,EACRgD,OAAQyB,MAIvB,ECzFYe,EAAc,WACvB,IAAMC,GAAkBlG,EAAAA,EAAAA,IAAYd,GAEpC,OACI,SAAC+B,EAAA,EAAD,CAAWE,GAAI,CAAEoB,GAAI,GAAKrB,SAAS,KAAnC,UACI,SAACO,EAAA,EAAD,CAAKN,GAAI,CAAEC,EAAG,EACVE,QAAS,UACTC,aAAc,OACdC,UAAW,GAAKE,UAAU,KAH9B,SAIKwE,EAAgBC,KAAI,gBAAGjE,EAAH,EAAGA,GAAI3C,EAAP,EAAOA,KAAMkB,EAAb,EAAaA,OAAb,OACrB,SAACuE,EAAD,CAEI9C,GAAIA,EACJ3C,KAAMA,EACNkB,OAAQA,GAHHyB,EAFY,OAWpC,ECqCD,EApDiB,WACf,IAAMjD,GAAQe,EAAAA,EAAAA,IAAYhB,GACpBkH,GAAkBlG,EAAAA,EAAAA,IAAYd,GAC9BY,GAAWC,EAAAA,EAAAA,MACXE,GAAYD,EAAAA,EAAAA,IAAYlB,GAM9B,OAJAsH,EAAAA,EAAAA,YAAU,WACRtG,GAASuG,EAAAA,EAAAA,MACV,GAAE,CAACvG,KAGF,UAACmB,EAAA,EAAD,CAAWS,UAAU,OAAOR,SAAS,KAArC,UACiB,UAAdjB,IAA0BhB,IAAS,SAAC,KAAD,KACpC,UAACwC,EAAA,EAAD,CAAKN,GAAI,CACPmF,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UAJd,WAMI,SAAC/D,EAAA,EAAD,CACEvB,GAAI,CAAEE,GAAI,GACViB,QAAQ,KACRK,SAAS,OACTE,WAAW,MACXE,MAAM,SACN2D,cAAY,EANd,SAMe,eAGf,SAAC7G,EAAD,KACA,SAAC6C,EAAA,EAAD,CACEvB,GAAI,CAAEE,GAAI,GACViB,QAAQ,KACRK,SAAS,OACTE,WAAW,MACXE,MAAM,SACN2D,cAAY,EANd,SAMe,cAGf,SAACjE,EAAD,IAC0B,IAA3ByD,EAAgBS,QACZ,SAACjE,EAAA,EAAD,CAAYvB,GAAI,CAAEE,GAAI,GACnBsB,SAAS,OACTC,MAAM,UACNC,WAAW,MACXC,WAAS,EACTC,MAAM,SALT,SAKkB,8BAClB,SAACkD,EAAD,SAIZ,C,2BC1DGW,EAAyBC,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAChDG,EAAcH,EAAQ,KACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,kFACD,UACJN,EAAQ,EAAUG,C,2BCVdL,EAAyBC,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAChDG,EAAcH,EAAQ,KACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,yJACD,QACJN,EAAQ,EAAUG,C,mGCPlB,MAJkCtD,EAAAA,cAAoB,MCCvC,SAAS0D,IAMtB,OALc1D,EAAAA,WAAiB2D,EAMhC,C,cCRD,EADoC,oBAAXC,QAAyBA,OAAOC,IAC9BD,OAAOC,IAAI,cAAgB,mB,SCiEtD,MApCA,SAAuBC,GACrB,IACEC,EAEED,EAFFC,SACOC,EACLF,EADF9C,MAEIiD,EAAaP,IAMb1C,EAAQhB,EAAAA,SAAc,WAC1B,IAAMkE,EAAwB,OAAfD,EAAsBD,EAjCzC,SAA8BC,EAAYD,GACxC,MAA0B,oBAAfA,EACWA,EAAWC,IAQjC,kBACKA,GACAD,EAEN,CAmBqDG,CAAqBF,EAAYD,GAInF,OAHc,MAAVE,IACFA,EAAOE,GAAyB,OAAfH,GAEZC,CACR,GAAE,CAACF,EAAYC,IAChB,OAAoBI,EAAAA,EAAAA,KAAKV,EAAAA,SAAuB,CAC9C9G,MAAOmE,EACP+C,SAAUA,GAEb,E,oBC5CKO,EAAc,CAAC,EACrB,SAASC,EAAgBC,EAASC,EAAYT,GAA+B,IAAnBU,EAAmB,wDAC3E,OAAO1E,EAAAA,SAAc,WACnB,IAAM2E,EAAgBH,GAAUC,EAAWD,IAAyBC,EACpE,GAA0B,oBAAfT,EAA2B,CACpC,IAAMY,EAAcZ,EAAWW,GACzBE,EAASL,GAAUM,EAAAA,EAAAA,GAAS,CAAC,EAAGL,GAAL,UAC9BD,EAAUI,IACRA,EAGL,OAAIF,EACK,kBAAMG,CAAN,EAEFA,CACR,CACD,OAAOL,GAAUM,EAAAA,EAAAA,GAAS,CAAC,EAAGL,GAAL,UACtBD,EAAUR,KACRc,EAAAA,EAAAA,GAAS,CAAC,EAAGL,EAAYT,EAC/B,GAAE,CAACQ,EAASC,EAAYT,EAAYU,GACtC,CAqDD,MA5CA,SAAuBZ,GACrB,IACEC,EAGED,EAHFC,SACOC,EAELF,EAFF9C,MACAwD,EACEV,EADFU,QAEIC,GAAaM,EAAAA,EAAAA,GAAuBT,GACpCU,EAAoBC,KAAqBX,EAMzCY,EAAcX,EAAgBC,EAASC,EAAYT,GACnDmB,EAAeZ,EAAgBC,EAASQ,EAAmBhB,GAAY,GAC7E,OAAoBK,EAAAA,EAAAA,KAAKe,EAAkB,CACzCpE,MAAOmE,EACPpB,UAAuBM,EAAAA,EAAAA,KAAKgB,EAAAA,EAAAA,SAAmC,CAC7DxI,MAAOqI,EACPnB,SAAUA,KAGf,E,SCzDKuB,EAAY,CAAC,SAMJ,SAASzD,EAAc0D,GAChC,IACOC,EACLD,EADFvE,MAEF8C,GAAQ2B,EAAAA,EAAAA,GAA8BF,EAAMD,GACxCI,EAAcF,EAAWG,EAAAA,GAC/B,OAAoBtB,EAAAA,EAAAA,KAAKuB,GAAqBd,EAAAA,EAAAA,GAAS,CAAC,EAAGhB,EAAO,CAChEU,QAASkB,EAAcC,EAAAA,OAAWE,EAClC7E,MAAO0E,GAAeF,IAEzB,C","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/Modal/Modal.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","pages/Contacts.jsx","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Edit.js","../node_modules/@mui/private-theming/useTheme/ThemeContext.js","../node_modules/@mui/private-theming/useTheme/useTheme.js","../node_modules/@mui/private-theming/ThemeProvider/nested.js","../node_modules/@mui/private-theming/ThemeProvider/ThemeProvider.js","../node_modules/@mui/system/esm/ThemeProvider/ThemeProvider.js","../node_modules/@mui/material/styles/ThemeProvider.js"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n    [selectFilter, selectContacts],\n    (filter, contacts) => {\n        const normalizeFilter = filter.toLowerCase();\n        return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizeFilter)).sort((a, b) => a.name.localeCompare(b.name));\n    })\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { selectContacts, selectIsLoading } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { toast } from 'react-hot-toast';\nimport { Box, Button, Container, TextField } from '@mui/material';\nimport { AddLoader } from \"components/Loader\";\n\nexport const ContactForm = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n    const operation = useSelector(selectIsLoading);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const form = e.currentTarget;\n        const name = form.elements.name.value;\n        const number = form.elements.number.value;\n\n        const newName = contacts.some(contact =>\n                contact.name.toLowerCase() === name.toLowerCase());\n                if (newName) {\n                    toast.error(`${name} is already in contacts`);\n                    return;\n        }\n        if (name === '' || number === '') {\n            toast.error('Fields cannot be empty. Enter some data!');\n            return;\n        }\n        try {\n            await dispatch(addContact({ name: name, number: number })).unwrap();\n            toast.success(`${name} is added to contacts`);\n            form.reset();    \n        } catch (error) {\n            console.log(error)\n        }\n};\n\n    return (\n            <Container maxWidth=\"sm\" sx={{ p: 4, mb: 3,\n                bgcolor: '#ffffff',\n                borderRadius: '10px',\n                boxShadow: 3,\n                }}>\n                <Box component=\"form\"\n                    autoComplete=\"off\"\n                    noValidate\n                    onSubmit={handleSubmit}>\n\n                    <TextField\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"Name\"\n                        name=\"name\" />\n\n                    <TextField\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        type=\"tel\"\n                        id=\"number\"\n                        label=\"Phone Number\"\n                        name=\"number\"/>\n\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{ mt: 2, mb: 2 }}\n                        size=\"large\">\n                    {operation === 'add' ? <AddLoader/> : <>Add contact</>}\n                    </Button>\n                </Box>\n            </Container>\n    );\n};","import { useDispatch, useSelector } from 'react-redux';\nimport { updateFilter } from 'redux/filter/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { Container, TextField, Typography } from '@mui/material';\n\nexport const Filter = () => {\n    const filter = useSelector(selectFilter);\n    const dispatch = useDispatch();\n\n    const handleChangeFilter = (e) => {\n        dispatch(updateFilter(e.currentTarget.value))\n    };\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Typography sx={{ mb: 1 }}\n                fontSize='22px'\n                color='#212121'\n                fontWeight='700'\n                paragraph\n                align=\"center\">\n                Find contacts by name\n            </Typography>\n            <TextField\n                sx={{ mb: 1 }}\n                margin=\"normal\"\n                fullWidth\n                name=\"filter\"\n                value={filter}\n                onChange={handleChangeFilter}/>\n        </Container>\n    );\n};\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Modal from '@mui/material/Modal';\nimport PropTypes from 'prop-types';\nimport { AddLoader } from \"components/Loader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateContact } from \"redux/contacts/operations\";\nimport { toast } from 'react-hot-toast';\nimport { Grid, TextField } from '@mui/material';\nimport { selectIsLoading } from 'redux/contacts/selectors';\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    boxShadow: 24,\n    p: 4,\n};\n\nexport const EditModal = ({ isOpen, id, name, number, onClose }) => {\n    const [contactName, setContactName] = React.useState(name);\n    const [contactNumber, setContactNumber] = React.useState(number);\n    const dispatch = useDispatch();\n    const operation = useSelector(selectIsLoading);\n\n    const handleEdit = async (e) => {\n        e.preventDefault();\n        if (contactName === '' || contactNumber === '') {\n            toast.error('Fields cannot be empty. Enter some data!');\n            return;\n        }\n        try {\n            await dispatch(updateContact({ name: contactName, number: contactNumber, contactId:id })).unwrap();\n            toast.success(`${name} contact was changed`);\n            onClose();\n        } catch (error) {\n            console.log(error);\n            toast.error('Oooops!..Something went wrong:( Please try later');\n        }\n    };\n\n    return (\n        <div>\n            <Modal\n                open={isOpen}\n                onClose={onClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Box component=\"form\"\n                    autoComplete=\"off\"\n                    noValidate\n                    onSubmit={handleEdit}>\n\n                    <TextField\n                        variant=\"filled\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"Name\"\n                        name=\"name\"\n                        value={contactName}\n                        onChange={({ target: { value } }) => setContactName(value)}/>\n\n                    <TextField\n                        variant=\"filled\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        type=\"tel\"\n                        id=\"number\"\n                        label=\"Phone Number\"\n                        name=\"number\"\n                        value={contactNumber}\n                        onChange={({ target: { value } }) => setContactNumber(value)}/>\n\n                    <Grid container justifyContent=\"center\" >\n                        <Button\n                            type=\"submit\"\n                            variant=\"contained\"\n                            sx={{ mt: 2, mb: 2, mr: 2 }}>\n                            {operation === 'update' ? <AddLoader/> : <>Save</>}\n                        </Button>\n                        <Button\n                            type=\"button\"\n                            size=\"medium\"\n                            variant=\"outlined\"\n                            sx={{ mt: 2, mb: 2 }}\n                            onClick={onClose}>\n                            Cancel\n                        </Button>\n                    </Grid>\n                        \n                </Box>\n                </Box>\n            </Modal>\n        </div>\n    );\n};\n\nEditModal.propTypes = {\n    isOpen: PropTypes.bool.isRequired,\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { toast } from 'react-hot-toast';\nimport Button from '@mui/material/Button';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport { useState } from 'react';\nimport { EditModal } from 'components/Modal/Modal';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { RemoveLoader } from 'components/Loader';\n\nconst theme = createTheme({\n    palette: {\n    primary: {\n        main: '#1976d2',\n    },\n    },\n})\n\nexport const ContactItem = ({ id, name, number }) => {\n    const dispatch = useDispatch();\n    const [isShowModal, setIsShowModal] = useState(false);\n    const operation = useSelector(selectIsLoading);\n\n    const handleDelete = async () => {\n        try {\n            await dispatch(deleteContact(id)).unwrap();\n            toast.success(`${name} was deleted from contacts`)\n        } catch (error) {\n            console.log(error)\n        } \n    };\n\n    const toggleModal = () => setIsShowModal(prev => !prev);\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Grid container spacing={2} columns={16}>\n                <Grid item sm={6} >\n                    <Typography\n                        paragraph\n                        fontSize='20px'\n                        fontWeight='500'\n                        color='#757575'>\n                        {name}\n                    </Typography>\n                </Grid>\n                <Grid item xs={4} >\n                    <Typography\n                        fontSize='20px'\n                        color='#212121'\n                        paragraph>\n                        {number}\n                    </Typography>\n                </Grid>\n                <Grid item xs>\n                    <Button\n                        type=\"button\"\n                        variant=\"outlined\"\n                        aria-label=\"delete\"\n                        size=\"small\"\n                        color=\"primary\"\n                        startIcon={operation === id ? <RemoveLoader /> : <DeleteIcon/>}\n                        onClick={handleDelete}>\n                        {operation === id ? 'Deleting...' : 'Delete'}\n                    </Button>\n                </Grid>\n                <Grid item xs>\n                    <Button\n                        type=\"button\"\n                        variant=\"contained\"\n                        aria-label=\"edit\"\n                        size=\"small\"\n                        color=\"primary\"\n                        startIcon={<EditIcon />}\n                        onClick={toggleModal}>\n                        Edit\n                    </Button>\n                </Grid>\n            </Grid>\n            {isShowModal &&\n                <EditModal\n                onClose={toggleModal}\n                id={id}\n                name={name}\n                number={number}\n                isOpen={isShowModal} />\n            }\n        </ThemeProvider> \n    );\n};\n\nContactItem.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n};\n","import { useSelector } from 'react-redux';\nimport { ContactItem } from '../ContactItem/ContactItem';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { Box, Container } from '@mui/material';\n\nexport const ContactList = () => {\n    const visibleContacts = useSelector(selectVisibleContacts);\n\n    return (\n        <Container sx={{ mt: 4 }} maxWidth=\"md\">\n            <Box sx={{ p: 4,\n                bgcolor: '#ffffff',\n                borderRadius: '10px',\n                boxShadow: 3,}} component='ul'>\n                {visibleContacts.map(({ id, name, number }) => (\n                <ContactItem\n                    key={id}\n                    id={id}\n                    name={name}\n                    number={number}\n                />\n            ))}\n            </Box>\n        </Container>\n    );\n};","import { useDispatch, useSelector } from 'react-redux';\nimport { selectError, selectIsLoading, selectVisibleContacts } from 'redux/contacts/selectors';\nimport { MainLoader } from 'components/Loader';\nimport { ContactForm } from 'components/ContactForm';\nimport { Filter } from 'components/Filter';\nimport { ContactList } from 'components/ContactList';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Box, Container, Typography } from '@mui/material';\n\nconst Contacts = () => {\n  const error = useSelector(selectError);\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n  const operation = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container component=\"main\" maxWidth=\"md\">\n      {operation === 'fetch' && !error && <MainLoader />}\n      <Box sx={{\n        marginTop: 3,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        }}>\n          <Typography\n            sx={{ mb: 4 }}\n            variant=\"h1\"\n            fontSize='40px'\n            fontWeight='700'\n            align=\"center\"\n            gutterBottom>\n            Phonebook\n          </Typography>\n          <ContactForm />\n          <Typography\n            sx={{ mb: 4 }}\n            variant=\"h2\"\n            fontSize='34px'\n            fontWeight='700'\n            align=\"center\"\n            gutterBottom>\n            Contacts\n          </Typography>\n          <Filter />\n        {visibleContacts.length === 0\n          ? (<Typography sx={{ mb: 2 }}\n                fontSize='18px'\n                color='#212121'\n                fontWeight='700'\n                paragraph\n                align=\"center\">You have no contacts yet</Typography>)\n          : (<ContactList />)}\n      </Box>\n    </Container>\n  );\n};\n\nexport default Contacts;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\nexports.default = _default;","import * as React from 'react';\nconst ThemeContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== 'production') {\n  ThemeContext.displayName = 'ThemeContext';\n}\nexport default ThemeContext;","import * as React from 'react';\nimport ThemeContext from './ThemeContext';\nexport default function useTheme() {\n  const theme = React.useContext(ThemeContext);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(theme);\n  }\n  return theme;\n}","const hasSymbol = typeof Symbol === 'function' && Symbol.for;\nexport default hasSymbol ? Symbol.for('mui.nested') : '__THEME_NESTED__';","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@mui/utils';\nimport ThemeContext from '../useTheme/ThemeContext';\nimport useTheme from '../useTheme';\nimport nested from './nested';\n\n// To support composition of theme.\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction mergeOuterLocalTheme(outerTheme, localTheme) {\n  if (typeof localTheme === 'function') {\n    const mergedTheme = localTheme(outerTheme);\n    if (process.env.NODE_ENV !== 'production') {\n      if (!mergedTheme) {\n        console.error(['MUI: You should return an object from your theme function, i.e.', '<ThemeProvider theme={() => ({})} />'].join('\\n'));\n      }\n    }\n    return mergedTheme;\n  }\n  return {\n    ...outerTheme,\n    ...localTheme\n  };\n}\n\n/**\n * This component takes a `theme` prop.\n * It makes the `theme` available down the React tree thanks to React context.\n * This component should preferably be used at **the root of your component tree**.\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme\n  } = props;\n  const outerTheme = useTheme();\n  if (process.env.NODE_ENV !== 'production') {\n    if (outerTheme === null && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n  const theme = React.useMemo(() => {\n    const output = outerTheme === null ? localTheme : mergeOuterLocalTheme(outerTheme, localTheme);\n    if (output != null) {\n      output[nested] = outerTheme !== null;\n    }\n    return output;\n  }, [localTheme, outerTheme]);\n  return /*#__PURE__*/_jsx(ThemeContext.Provider, {\n    value: theme,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as MuiThemeProvider, useTheme as usePrivateTheme } from '@mui/private-theming';\nimport { exactProp } from '@mui/utils';\nimport { ThemeContext as StyledEngineThemeContext } from '@mui/styled-engine';\nimport useThemeWithoutDefault from '../useThemeWithoutDefault';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst EMPTY_THEME = {};\nfunction useThemeScoping(themeId, upperTheme, localTheme, isPrivate = false) {\n  return React.useMemo(() => {\n    const resolvedTheme = themeId ? upperTheme[themeId] || upperTheme : upperTheme;\n    if (typeof localTheme === 'function') {\n      const mergedTheme = localTheme(resolvedTheme);\n      const result = themeId ? _extends({}, upperTheme, {\n        [themeId]: mergedTheme\n      }) : mergedTheme;\n      // must return a function for the private theme to NOT merge with the upper theme.\n      // see the test case \"use provided theme from a callback\" in ThemeProvider.test.js\n      if (isPrivate) {\n        return () => result;\n      }\n      return result;\n    }\n    return themeId ? _extends({}, upperTheme, {\n      [themeId]: localTheme\n    }) : _extends({}, upperTheme, localTheme);\n  }, [themeId, upperTheme, localTheme, isPrivate]);\n}\n\n/**\n * This component makes the `theme` available down the React tree.\n * It should preferably be used at **the root of your component tree**.\n *\n * <ThemeProvider theme={theme}> // existing use case\n * <ThemeProvider theme={{ id: theme }}> // theme scoping\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme,\n    themeId\n  } = props;\n  const upperTheme = useThemeWithoutDefault(EMPTY_THEME);\n  const upperPrivateTheme = usePrivateTheme() || EMPTY_THEME;\n  if (process.env.NODE_ENV !== 'production') {\n    if (upperTheme === null && typeof localTheme === 'function' || themeId && upperTheme && !upperTheme[themeId] && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n  const engineTheme = useThemeScoping(themeId, upperTheme, localTheme);\n  const privateTheme = useThemeScoping(themeId, upperPrivateTheme, localTheme, true);\n  return /*#__PURE__*/_jsx(MuiThemeProvider, {\n    theme: privateTheme,\n    children: /*#__PURE__*/_jsx(StyledEngineThemeContext.Provider, {\n      value: engineTheme,\n      children: children\n    })\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n  /**\n   * The design system's unique id for getting the corresponded theme when there are multiple design systems.\n   */\n  themeId: PropTypes.string\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"theme\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as SystemThemeProvider } from '@mui/system';\nimport THEME_ID from './identifier';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ThemeProvider(_ref) {\n  let {\n      theme: themeInput\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const scopedTheme = themeInput[THEME_ID];\n  return /*#__PURE__*/_jsx(SystemThemeProvider, _extends({}, props, {\n    themeId: scopedTheme ? THEME_ID : undefined,\n    theme: scopedTheme || themeInput\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","normalizeFilter","toLowerCase","contact","name","includes","sort","a","b","localeCompare","ContactForm","dispatch","useDispatch","useSelector","operation","handleSubmit","e","preventDefault","form","currentTarget","elements","value","number","some","toast","addContact","unwrap","reset","console","log","Container","maxWidth","sx","p","mb","bgcolor","borderRadius","boxShadow","Box","component","autoComplete","noValidate","onSubmit","TextField","margin","required","fullWidth","id","label","type","Button","variant","mt","size","Filter","Typography","fontSize","color","fontWeight","paragraph","align","onChange","updateFilter","style","position","top","left","transform","width","EditModal","isOpen","onClose","React","contactName","setContactName","contactNumber","setContactNumber","handleEdit","updateContact","contactId","Modal","open","target","Grid","container","justifyContent","mr","onClick","theme","createTheme","palette","primary","main","ContactItem","useState","isShowModal","setIsShowModal","handleDelete","deleteContact","toggleModal","prev","ThemeProvider","spacing","columns","item","sm","xs","startIcon","Delete","Edit","ContactList","visibleContacts","map","useEffect","fetchContacts","marginTop","display","flexDirection","alignItems","gutterBottom","length","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","useTheme","ThemeContext","Symbol","for","props","children","localTheme","outerTheme","output","mergeOuterLocalTheme","nested","_jsx","EMPTY_THEME","useThemeScoping","themeId","upperTheme","isPrivate","resolvedTheme","mergedTheme","result","_extends","useThemeWithoutDefault","upperPrivateTheme","usePrivateTheme","engineTheme","privateTheme","MuiThemeProvider","StyledEngineThemeContext","_excluded","_ref","themeInput","_objectWithoutPropertiesLoose","scopedTheme","THEME_ID","SystemThemeProvider","undefined"],"sourceRoot":""}