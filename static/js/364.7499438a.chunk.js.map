{"version":3,"file":"static/js/364.7499438a.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/Modal/Modal.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","pages/Contacts.jsx","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Edit.js"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n    [selectFilter, selectContacts],\n    (filter, contacts) => {\n        const normalizeFilter = filter.toLowerCase();\n        return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizeFilter)).sort((a, b) => a.name.localeCompare(b.name));\n    })\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { selectContacts, selectIsLoading } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { toast } from 'react-hot-toast';\nimport { Box, Button, Container, TextField } from '@mui/material';\nimport { AddLoader } from \"components/Loader\";\n\n\nexport const ContactForm = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n    const operation = useSelector(selectIsLoading);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const form = e.currentTarget;\n        const name = form.elements.name.value;\n        const number = form.elements.number.value;\n\n        const newName = contacts.some(contact =>\n                contact.name.toLowerCase() === name.toLowerCase());\n                if (newName) {\n                    toast.error(`${name} is already in contacts`);\n                    return;\n        }\n        if (name === '' || number === '') {\n            toast.error('Fields cannot be empty. Enter some data!');\n            return;\n        }\n        try {\n            await dispatch(addContact({ name: name, number: number })).unwrap();\n            toast.success(`${name} is added to contacts`);\n            form.reset();    \n        } catch (error) {\n            console.log(error)\n        }\n};\n\n    return (\n            <Container maxWidth=\"xs\" sx={{ p: 4, mb: 4,\n                bgcolor: '#ffffff',\n                borderRadius: '10px',\n                boxShadow: 3,\n                }}>\n                <Box component=\"form\"\n                    autoComplete=\"off\"\n                    noValidate\n                    onSubmit={handleSubmit}>\n\n                    <TextField\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"Name\"\n                    name=\"name\"\n                    size=\"small\"\n                    />\n\n                    <TextField\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        type=\"tel\"\n                        id=\"number\"\n                        label=\"Phone Number\"\n                    name=\"number\"\n                    size=\"small\"\n                    \n                        />\n\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{ mt: 2, mb: 2 }}\n                        size=\"medium\">\n                    {operation === 'add' ? <AddLoader/> : <>Add contact</>}\n                    </Button>\n                </Box>\n            </Container>\n    );\n};","import { useDispatch, useSelector } from 'react-redux';\nimport { updateFilter } from 'redux/filter/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { Container, TextField, Typography } from '@mui/material';\n\nexport const Filter = () => {\n    const filter = useSelector(selectFilter);\n    const dispatch = useDispatch();\n\n    const handleChangeFilter = (e) => {\n        dispatch(updateFilter(e.currentTarget.value))\n    };\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Typography sx={{ mb: 1 }}\n                fontSize='22px'\n                color='#212121'\n                paragraph\n            >\n                Find contacts by name:\n            </Typography>\n            <TextField\n                sx={{ my: 0.5 }}\n                margin=\"normal\"\n                fullWidth\n                name=\"filter\"\n                value={filter}\n                size=\"small\"\n                onChange={handleChangeFilter}/>\n        </Container>\n    );\n};\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Modal from '@mui/material/Modal';\nimport PropTypes from 'prop-types';\nimport { AddLoader } from \"components/Loader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateContact } from \"redux/contacts/operations\";\nimport { toast } from 'react-hot-toast';\nimport { Grid, TextField } from '@mui/material';\nimport { selectContacts, selectIsLoading } from 'redux/contacts/selectors';\n\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    bgcolor: 'background.paper',\n    boxShadow: 24,\n    p: 4,\n};\n\nexport const EditModal = ({ isOpen, id, name, number, onClose }) => {\n    const [contactName, setContactName] = React.useState(name);\n    const [contactNumber, setContactNumber] = React.useState(number);\n    const dispatch = useDispatch();\n    const operation = useSelector(selectIsLoading);\n    const contacts = useSelector(selectContacts);\n\n    const handleEdit = async (e) => {\n        e.preventDefault();\n\n        const EditName = contacts.some(contact =>\n            contact.name.toLowerCase() === contactName.toLowerCase());\n        const EditNumber = contacts.some(contact =>\n            contact.number === contactNumber);\n\n        if (EditName && EditNumber) {\n            toast.error(`${contactName} is already in contacts`);\n            return;\n        }\n\n        if (contactName === '' || contactNumber === '') {\n            toast.error('Fields cannot be empty. Enter some data!');\n            return;\n        }\n\n        try {\n            await dispatch(updateContact({ name: contactName, number: contactNumber, contactId:id })).unwrap();\n            toast.success(`${name} contact was changed`);\n            onClose();\n        } catch (error) {\n            console.log(error);\n            toast.error('Oooops!..Something went wrong:( Please try later');\n        }\n    };\n\n    return (\n        <div>\n            <Modal\n                open={isOpen}\n                onClose={onClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={{ ...style, width: { xs: 240, sm: 400 } }}\n                >\n                    <Box component=\"form\"\n                    autoComplete=\"off\"\n                    noValidate\n                    onSubmit={handleEdit}>\n\n                    <TextField\n                        variant=\"filled\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"name\"\n                        label=\"Name\"\n                        name=\"name\"\n                        value={contactName}\n                        onChange={({ target: { value } }) => setContactName(value)}/>\n\n                    <TextField\n                        variant=\"filled\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        type=\"tel\"\n                        id=\"number\"\n                        label=\"Phone Number\"\n                            name=\"number\"\n                            \n                        value={contactNumber}\n                        onChange={({ target: { value } }) => setContactNumber(value)}/>\n\n                    <Grid container justifyContent=\"center\" >\n                        <Button\n                            type=\"submit\"\n                            variant=\"contained\"\n                            sx={{ mt: 2, mb: 2, mr: 2 }}>\n                            {operation === 'update' ? <AddLoader/> : <>Save</>}\n                        </Button>\n                        <Button\n                            type=\"button\"\n                            size=\"medium\"\n                            variant=\"outlined\"\n                            sx={{ mt: 2, mb: 2 }}\n                            onClick={onClose}>\n                            Cancel\n                        </Button>\n                    </Grid>\n                        \n                </Box>\n                </Box>\n            </Modal>\n        </div>\n    );\n};\n\nEditModal.propTypes = {\n    isOpen: PropTypes.bool.isRequired,\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { toast } from 'react-hot-toast';\nimport Button from '@mui/material/Button';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { useState } from 'react';\nimport { EditModal } from 'components/Modal/Modal';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { RemoveLoader } from 'components/Loader';\n\n\nexport const ContactItem = ({ id, name, number }) => {\n    const dispatch = useDispatch();\n    const [isShowModal, setIsShowModal] = useState(false);\n    const operation = useSelector(selectIsLoading);\n\n    const handleDelete = async () => {\n        try {\n            await dispatch(deleteContact(id)).unwrap();\n            toast.success(`${name} was deleted from contacts`)\n        } catch (error) {\n            console.log(error)\n        } \n    };\n\n    const toggleModal = () => setIsShowModal(prev => !prev);\n\n    return (\n        <>\n            <Grid container sx={{ mb: {xs:4,sm:4, md:1} }} spacing={1}\n                // rowSpacing={{ xs: 1, sm: 1, md: 2 }}\n                // columnSpacing={{ xs: 1, sm: 0, md: 0 }}\n                columns={{xs:12,sm:12, md:16}} >\n\n                    <Grid item xs={12} sm={6} md={6} >\n                        <Typography\n                        paragraph\n                        sx={{\n                        fontSize: {\n                            xs: '16px',\n                            sm: '18px',\n                            },\n                            textAlign: {\n                                xs: 'center',\n                                md: 'left'\n                            }\n                        }} \n                        // textAlign='center'\n                        fontWeight='500'\n                        color='#212121'\n                    >\n                        {name}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} sm={6} md={6} >\n                        <Typography \n                        sx={{\n                        fontSize: {\n                            xs: '16px',\n                            sm: '18px',\n                            },\n                            textAlign: {\n                                xs: 'center',\n                                md: 'left'\n                            }\n                        }}\n                        // textAlign='center'\n                        color='#757575'\n                        paragraph\n                        >\n                        {number}\n                        </Typography>\n                    </Grid>\n\n                    <Grid item xs={6}  md>\n                        <Button\n                        type=\"button\"\n                        variant=\"outlined\"\n                        aria-label=\"delete\"\n                        size=\"small\"\n                        color=\"primary\"\n                        startIcon={operation === id ? <RemoveLoader /> : <DeleteIcon/>}\n                        onClick={handleDelete}>\n                        {operation === id ? 'Deleting...' : 'Delete'}\n                        </Button>\n                    </Grid>\n                <Grid item xs={6}  md >\n                        <Button\n                        type=\"button\"\n                        variant=\"contained\"\n                        aria-label=\"edit\"\n                        size=\"small\"\n                        color=\"primary\"\n                        startIcon={<EditIcon />}\n                        onClick={toggleModal}>\n                        Edit\n                        </Button>\n                    </Grid>\n\n            </Grid>\n            {isShowModal &&\n                <EditModal\n                onClose={toggleModal}\n                id={id}\n                name={name}\n                number={number}\n                isOpen={isShowModal} />\n            }\n        </>\n    );\n};\n\nContactItem.propTypes = {\n    id: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n};\n\n","import { useSelector } from 'react-redux';\nimport { ContactItem } from '../ContactItem/ContactItem';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { Container } from '@mui/material';\n\nexport const ContactList = () => {\n    const visibleContacts = useSelector(selectVisibleContacts);\n\n    return (\n            <Container maxWidth=\"md\" sx={{ p: 4, mt: 4,\n                bgcolor: '#ffffff',\n                borderRadius: '10px',\n                boxShadow: 3,}} component='ul'>\n                {visibleContacts.map(({ id, name, number }) => (\n                <ContactItem\n                    key={id}\n                    id={id}\n                    name={name}\n                    number={number}\n                />\n            ))}\n            </Container>\n    );\n};","import { useDispatch, useSelector } from 'react-redux';\nimport { selectError, selectIsLoading, selectVisibleContacts } from 'redux/contacts/selectors';\nimport { MainLoader } from 'components/Loader';\nimport { ContactForm } from 'components/ContactForm';\nimport { Filter } from 'components/Filter';\nimport { ContactList } from 'components/ContactList';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Container, Typography } from '@mui/material';\nimport { Helmet } from 'react-helmet';\n\n\nconst Contacts = () => {\n  const error = useSelector(selectError);\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n  const operation = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n      <Container component='main'\n            maxWidth=\"md\"\n            sx={{\n                marginTop: 3,\n                marginBottom: 3,\n                minHeight: '80vh',\n                textAlign: 'center',\n            }}>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n          <Typography\n            sx={{ mb: 3 }}\n            variant=\"h1\"\n            fontSize='44px'\n            fontWeight='700'\n            gutterBottom>\n            Phonebook\n        </Typography>\n\n          <ContactForm />\n\n          <Typography\n            sx={{ mb: 3 }}\n            variant=\"h2\"\n            fontSize='34px'\n            fontWeight='500'\n            gutterBottom>\n            Contacts\n        </Typography>\n\n        <Filter />\n\n        {operation === 'fetch' && !error && <MainLoader />}\n        {visibleContacts.length === 0\n          ? (<Typography sx={{ my: 2 }}\n                fontSize='18px'\n                color='#212121'\n                fontWeight='700'\n                paragraph\n                align=\"center\">There are no contacts yet</Typography>)\n          : (<ContactList />)}\n\n    </Container>\n  );\n};\n\nexport default Contacts;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 0 0-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\nexports.default = _default;"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","normalizeFilter","toLowerCase","contact","name","includes","sort","a","b","localeCompare","ContactForm","dispatch","useDispatch","useSelector","operation","handleSubmit","e","preventDefault","form","currentTarget","elements","value","number","some","toast","addContact","unwrap","reset","console","log","Container","maxWidth","sx","p","mb","bgcolor","borderRadius","boxShadow","Box","component","autoComplete","noValidate","onSubmit","TextField","margin","required","fullWidth","id","label","size","type","Button","variant","mt","Filter","Typography","fontSize","color","paragraph","my","onChange","updateFilter","style","position","top","left","transform","EditModal","isOpen","onClose","React","contactName","setContactName","contactNumber","setContactNumber","handleEdit","EditName","EditNumber","updateContact","contactId","Modal","open","width","xs","sm","target","Grid","container","justifyContent","mr","onClick","ContactItem","useState","isShowModal","setIsShowModal","handleDelete","deleteContact","toggleModal","prev","md","spacing","columns","item","textAlign","fontWeight","startIcon","Delete","Edit","ContactList","visibleContacts","map","useEffect","fetchContacts","marginTop","marginBottom","minHeight","Helmet","gutterBottom","length","align","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}